tmp(0) := x"9" & b"000001110";	-- JSR @14	#Deve desviar para a posição 14
tmp(1) := x"6" & b"000000101";	-- JMP @5	#Deve desviar para a posição 5
tmp(2) := x"7" & b"000001001";	-- JEQ @9	#Deve desviar para a posição 9
tmp(3) := x"0" & b"000000000";	-- NOP
tmp(4) := x"0" & b"000000000";	-- NOP
tmp(5) := x"4" & b"000000101";	-- LDI $5	#Carrega acumulador com valor 5
tmp(6) := x"5" & b"000000000";	-- STA $0	#Armazena 5 na posição 0 da memória
tmp(7) := x"8" & b"000000000";	-- CEQ @0	#A Comparação deve fazer o flagIgual ser 1
tmp(8) := x"6" & b"000000010";	-- JMP @2	#Vai testar o flagIgual depois do jump
tmp(9) := x"0" & b"000000000";	-- NOP
tmp(10) := x"4" & b"000000100";	-- LDI $4	#Carrega acumulador com valor 4
tmp(11) := x"8" & b"000000000";	-- CEQ @0	#Compara com valor 5, deve fazer o flagIgual ser 0
tmp(12) := x"7" & b"000000011";	-- JEQ @3	#Não deve ocorrer o desvio
tmp(13) := x"6" & b"000010100";	-- JMP .label1	#Fim. Deve ficar neste laço
tmp(14) := x"0" & b"000000000";	-- NOP
tmp(15) := x"0" & b"000000000";	-- NOP
tmp(16) := x"0" & b"000000000";	-- NOP
tmp(17) := x"0" & b"000000000";	-- NOP
tmp(18) := x"0" & b"000000000";	-- NOP
tmp(19) := x"0" & b"000000000";	-- NOP
-- Label label1 definida em endereço 20
tmp(20) := x"6" & b"000010001";	-- JMP @17
tmp(21) := x"A" & b"000000000";	-- RET	#Retorna para a posição 1
